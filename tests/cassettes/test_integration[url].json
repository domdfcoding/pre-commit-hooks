{"http_interactions": [{"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.25.1"], "Accept-Encoding": ["gzip, deflate"], "accept": ["application/json"], "Connection": ["keep-alive"], "content-type": ["application/json"]}, "method": "GET", "uri": "https://pypi.org/pypi/pyreadline/json/"}, "response": {"body": {"encoding": "UTF-8", "string": "<html>\n <head>\n  <title>301 Moved Permanently</title>\n </head>\n <body>\n  <h1>301 Moved Permanently</h1>\n  The resource has been moved to /pypi/pyreadline/json; you should be redirected automatically.\n\n\n </body>\n</html>"}, "headers": {"Connection": ["keep-alive"], "Content-Length": ["218"], "Access-Control-Allow-Headers": ["Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since"], "Access-Control-Allow-Methods": ["GET"], "Access-Control-Allow-Origin": ["*"], "Access-Control-Expose-Headers": ["X-PyPI-Last-Serial"], "Access-Control-Max-Age": ["86400"], "Cache-Control": ["max-age=900, public"], "Content-Security-Policy": ["base-uri 'self'; block-all-mixed-content; connect-src 'self' https://api.github.com/repos/ *.fastly-insights.com sentry.io https://api.pwnedpasswords.com https://2p66nmmycsj3.statuspage.io; default-src 'none'; font-src 'self' fonts.gstatic.com; form-action 'self'; frame-ancestors 'none'; frame-src 'none'; img-src 'self' https://warehouse-camo.ingress.cmh1.psfhosted.org/ www.google-analytics.com *.fastly-insights.com; script-src 'self' www.googletagmanager.com www.google-analytics.com *.fastly-insights.com https://cdn.ravenjs.com; style-src 'self' fonts.googleapis.com; worker-src *.fastly-insights.com"], "Content-Type": ["text/html; charset=UTF-8"], "Location": ["https://pypi.org/pypi/pyreadline/json"], "Referrer-Policy": ["origin-when-cross-origin"], "Server": ["nginx/1.13.9"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 02 Mar 2021 18:25:35 GMT"], "X-Served-By": ["cache-bwi5132-BWI, cache-lon4247-LON"], "X-Cache": ["HIT, MISS"], "X-Cache-Hits": ["1, 0"], "X-Timer": ["S1614709535.246334,VS0,VE75"], "Vary": ["Accept-Encoding"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 301, "message": "Moved Permanently"}, "url": "https://pypi.org/pypi/pyreadline/json/"}, "recorded_at": "2021-03-02T18:25:35"}, {"request": {"body": {"encoding": "utf-8", "string": ""}, "headers": {"User-Agent": ["python-requests/2.25.1"], "Accept-Encoding": ["gzip, deflate"], "accept": ["application/json"], "Connection": ["keep-alive"]}, "method": "GET", "uri": "https://pypi.org/pypi/pyreadline/json"}, "response": {"body": {"encoding": "utf-8", "base64_string": "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"}, "headers": {"Connection": ["keep-alive"], "Content-Length": ["4303"], "Access-Control-Allow-Headers": ["Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since"], "Access-Control-Allow-Methods": ["GET"], "Access-Control-Allow-Origin": ["*"], "Access-Control-Expose-Headers": ["X-PyPI-Last-Serial"], "Access-Control-Max-Age": ["86400"], "Cache-Control": ["max-age=900, public"], "Content-Encoding": ["gzip"], "Content-Security-Policy": ["base-uri 'self'; block-all-mixed-content; connect-src 'self' https://api.github.com/repos/ *.fastly-insights.com sentry.io https://api.pwnedpasswords.com https://2p66nmmycsj3.statuspage.io; default-src 'none'; font-src 'self' fonts.gstatic.com; form-action 'self'; frame-ancestors 'none'; frame-src 'none'; img-src 'self' https://warehouse-camo.ingress.cmh1.psfhosted.org/ www.google-analytics.com *.fastly-insights.com; script-src 'self' www.googletagmanager.com www.google-analytics.com *.fastly-insights.com https://cdn.ravenjs.com; style-src 'self' fonts.googleapis.com; worker-src *.fastly-insights.com"], "Content-Type": ["application/json"], "ETag": ["\"OIvFtzzrqJaPJnGGpUwoaw\""], "Referrer-Policy": ["origin-when-cross-origin"], "Server": ["nginx/1.13.9"], "X-PyPI-Last-Serial": ["1772525"], "Accept-Ranges": ["bytes"], "Date": ["Tue, 02 Mar 2021 18:25:35 GMT"], "X-Served-By": ["cache-bwi5139-BWI, cache-lon4247-LON"], "X-Cache": ["HIT, HIT"], "X-Cache-Hits": ["4, 1"], "X-Timer": ["S1614709535.329912,VS0,VE1"], "Vary": ["Accept-Encoding"], "Strict-Transport-Security": ["max-age=31536000; includeSubDomains; preload"], "X-Frame-Options": ["deny"], "X-XSS-Protection": ["1; mode=block"], "X-Content-Type-Options": ["nosniff"], "X-Permitted-Cross-Domain-Policies": ["none"]}, "status": {"code": 200, "message": "OK"}, "url": "https://pypi.org/pypi/pyreadline/json"}, "recorded_at": "2021-03-02T18:25:35"}], "recorded_with": "betamax/0.8.1"}
